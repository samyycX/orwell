name: Ubuntu 20.04 CI (glibc 2.31)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:

  build:
    name: Build Release (Ubuntu 20.04)
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
      env:
        DEBIAN_FRONTEND: noninteractive
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        apt-get update
        apt-get install -y curl build-essential libpq-dev pkg-config protobuf-compiler

    - name: Install Rust
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        source $HOME/.cargo/env

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ubuntu-20.04-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ubuntu-20.04-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ubuntu-20.04-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Build server
      run: |
        source $HOME/.cargo/env
        cargo build --release --bin server

    - name: Build client
      run: |
        source $HOME/.cargo/env
        cargo build --release --bin client

    - name: Upload server artifact
      uses: actions/upload-artifact@v4
      with:
        name: orwell-server-ubuntu-20.04
        path: target/release/server

    - name: Upload client artifact
      uses: actions/upload-artifact@v4
      with:
        name: orwell-client-ubuntu-20.04
        path: target/release/client

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
      env:
        DEBIAN_FRONTEND: noninteractive

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        apt-get update
        apt-get install -y curl build-essential

    - name: Install Rust
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        source $HOME/.cargo/env

    - name: Install cargo-audit
      run: |
        source $HOME/.cargo/env
        cargo install cargo-audit

    - name: Run security audit
      run: |
        source $HOME/.cargo/env
        cargo audit