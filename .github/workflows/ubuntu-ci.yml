name: Ubuntu 22.04 CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:

  build:
    name: Build Release
    runs-on: ubuntu-22.04
    container:
      image: ubuntu:20.04
      env:
        DEBIAN_FRONTEND: noninteractive
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        apt-get update
        apt remove gcc-9 -y
        apt-get install -y sudo curl gcc-10 libpq-dev pkg-config protobuf-compiler build-essential

    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Build server
      run: cargo build --release --bin server
      env:
        RUSTFLAGS: ""

    - name: Build client
      run: cargo build --release --bin client
      env:
        RUSTFLAGS: ""

    - name: Upload server artifact
      uses: actions/upload-artifact@v4
      with:
        name: orwell-server-ubuntu-22.04
        path: target/release/server

    - name: Upload client artifact
      uses: actions/upload-artifact@v4
      with:
        name: orwell-client-ubuntu-22.04
        path: target/release/client

  security-audit:
    name: Security Audit
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Run security audit
      run: cargo audit